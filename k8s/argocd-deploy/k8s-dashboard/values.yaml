kubernetes-dashboard:
  api:
    role: api
    containers:
      resources:
        requests:
          memory: 1Gi
        limits:
          memory: 2Gi

  # opens an ingress to the same service that the demo/setup docs for the
  # dashboard proxies to:
  #
  #   kubectl -n kubernetes-dashboard port-forward \
  #     svc/kubernetes-dashboard-kong-proxy 8443:443
  #
  # allows you to go to
  #
  #   https://home.k8s:<ingress-nginx NodePort HTTPS port>
  #
  # to access the dashboard
  #
  # NOTE: home.k8s is present so nginx filters/serves based on domain name
  #       I created local DNS entries in pihole that point to all of my nodes to
  #       make this work. I also patch the NodePort svc for the
  #       nginx-ingress-controller to ensure a static port on all setups
  #
  # token to login:
  #   kubectl get secret admin-user -n kubernetes-dashboard -o jsonpath={".data.token"} | base64 -d
  #
  # for more info on the nginx annotations:
  #   https://github.com/kubernetes/ingress-nginx/blob/main/docs/user-guide/nginx-configuration/annotations.md

  app:
    mode: dashboard
    tls:
      secretName: k8s-dashboard-cert
    ingress:
      enabled: true
      ingressClassName: nginx
      hosts:
        - dashboard.home.k8s
        - k8s.dashboard.rannet.duckdns.org
      pathType: Prefix
      useDefaultAnnotations: true
      issuer:
        scope: cluster
        name: duckdns-letsencrypt-prod
      # annotations:
      #   nginx.ingress.kubernetes.io/auth-url: https://oauth2-proxy.home.k8s:30443/oauth2/auth
      #   # don't feel too good about this; ideally should be $server_port, but
      #   # using a NodePort instead of an actual LB doesn't seem to allow this (TBD)
      #   nginx.ingress.kubernetes.io/auth-signin: "https://oauth2-proxy.home.k8s:30443/oauth2/start?rd=$scheme://$host:30443$request_uri"
      #   nginx.ingress.kubernetes.io/auth-response-headers: X-Auth-Request-User,X-Auth-Request-Email,X-Forwarded-Groups
