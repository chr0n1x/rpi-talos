# NOTE: at some point I did a
#
#  kubectl label namespace monitoring pod-security.kubernetes.io/enforce=privileged
#
# not sure if possible in argocd land
prometheus:
  persistence:
    enabled: true
    storageClassName: longhorn
    # TODO: somehow find-or-create longhorn pvc?
    # existingClaim: prometheus-pvc
    accessModes:
      - ReadWriteMany

  prometheus-node-exporter:
    rbac:
      create: true

  rbac:
    create: true
    podSecurityPolicy:
      enabled: true

  server:
    ingress:
      enabled: true
      tls:
        - hosts:
            - prometheus.rannet.duckdns.org
          secretName: prometheus-cert
      hosts:
        - prometheus.rannet.duckdns.org
      ingressClassName: nginx
      annotations:
        nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
        nginx.ingress.kubernetes.io/force-ssl-redirect: "false"
        nginx.ingress.kubernetes.io/ssl-passthrough: "false"
        # nginx.ingress.kubernetes.io/auth-url: https://oauth2-proxy.home.k8s:30443/oauth2/auth
        # # don't feel too good about this; ideally should be $server_port, but
        # # using a NodePort instead of an actual LB doesn't seem to allow this (TBD)
        # nginx.ingress.kubernetes.io/auth-signin: "https://oauth2-proxy.home.k8s:30443/oauth2/start?rd=$scheme://$host:30443$request_uri"
        # nginx.ingress.kubernetes.io/auth-response-headers: X-Auth-Request-User,X-Auth-Request-Email,X-Forwarded-Groups
