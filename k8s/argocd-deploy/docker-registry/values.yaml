persistence:
  class: smb
  # generated by SMB storage CSI controller
  #
  # if reclaiming remember to do this if pvc is stuck in PENDING
  # https://github.com/kubernetes-csi/csi-driver-smb/issues/821
  volumeName: pvc-888a27fe-bdbe-4c7c-88b3-9014ac93391a
  size: 128Gi

docker-registry-ui:
  registry:
    enabled: true
    dataVolume:
      persistentVolumeClaim:
        claimName: docker-registry-pvc

    ingress:
      tls:
        - hosts:
          - docker.rannet.duckdns.org
          secretName: docker-registry-cert
      enabled: true
      # automatically has a prefix of /v2
      host: docker.rannet.duckdns.org
      annotations:
        cert-manager.io/cluster-issuer: duckdns-letsencrypt-prod
        nginx.ingress.kubernetes.io/proxy-body-size: "0"
        nginx.ingress.kubernetes.io/proxy-read-timeout: "600"
        nginx.ingress.kubernetes.io/proxy-send-timeout: "600"
  ui:
    ingress:
        enabled: true
        tls:
          - hosts:
            - docker.rannet.duckdns.org
            secretName: docker-registry-cert
        host: docker.rannet.duckdns.org
        pathType: Prefix
        annotations:
          cert-manager.io/cluster-issuer: duckdns-letsencrypt-prod
          nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
          nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
          nginx.ingress.kubernetes.io/ssl-passthrough: "true"
          nginx.ingress.kubernetes.io/auth-url: https://oauth2.rannet.duckdns.org/oauth2/auth
          nginx.ingress.kubernetes.io/auth-signin: https://oauth2.rannet.duckdns.org/oauth2/start
          nginx.ingress.kubernetes.io/auth-response-headers: X-Auth-Request-User,X-Auth-Request-Email,X-Forwarded-Groups
          nginx.ingress.kubernetes.io/auth-request-redirect: $scheme://$host:$server_port$request_uri$is_args$args
