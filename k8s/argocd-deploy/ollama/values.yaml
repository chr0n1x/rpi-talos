open-webui:
  nodeSelector:
    nvidia.com/gpu.family: pascal

  persistence:
    enabled: true
    size: 8Gi
    storageClass: smb
    # autogenerated by cluster on initial sync
    # existingClaim: open-webui
    # volumeName: pvc-13995942-31d1-4320-89a0-4bbf78a39567

  # https://github.com/open-webui/helm-charts/issues/17#issuecomment-2105195244
  ollama:
    runtimeClassName: nvidia
    enabled: true
    persistentVolume:
      enabled: true
      size: 128Gi
      storageClass: smb
      # autogenerated by cluster on initial sync
      # volumeName: pvc-aef41080-0255-4de2-96fe-473d0fc3a3fa
    ingress:
      enabled: true
      class: nginx
      hosts:
        - host: ollama-api.home.k8s
          paths:
            - path: /
              pathType: Prefix
      # no nginx auth/termination required; API uses JWT
      annotations:
        nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
        nginx.ingress.kubernetes.io/force-ssl-redirect: "false"
        nginx.ingress.kubernetes.io/ssl-passthrough: "true"
    ollama:
      pull:
        - gemma2
      run:
        - gemma2
      gpu:
        enabled: true
        type: nvidia
        nvidiaResource: nvidia.com/gpu

  pipelines:
    persistence:
      enabled: true
      size: 2Gi
      storageClass: smb
      # autogenerated by cluster on initial sync
      # existingClaim: open-webui-pipelines
      # volumeName: pvc-9108f24f-5220-488c-a91a-9bd88f584ed9

  ingress:
    class: nginx
    enabled: true
    host: ollama.home.k8s
    annotations:
      nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
      nginx.ingress.kubernetes.io/force-ssl-redirect: "false"
      nginx.ingress.kubernetes.io/ssl-passthrough: "true"

      nginx.ingress.kubernetes.io/auth-url: https://oauth2-proxy.home.k8s:30443/oauth2/auth
      # don't feel too good about this; ideally should be $server_port, but
      # using a NodePort instead of an actual LB doesn't seem to allow this (TBD)
      nginx.ingress.kubernetes.io/auth-signin: "https://oauth2-proxy.home.k8s:30443/oauth2/start?rd=$scheme://$host:30443$request_uri"
      nginx.ingress.kubernetes.io/auth-response-headers: X-Auth-Request-User,X-Auth-Request-Email,X-Forwarded-Groups
