releases:
  - name: ingress-nginx
    namespace: ingress-nginx
    chart: kustomize/nginx
    createNamespace: true
    hooks:
      - events:
          - prepare
        command: bash
        args:
          - -c
          - 'kubectl create ns ingress-nginx || :'
      - events:
          - prepare
        command: bash
        args:
          - -c
          - |
            kubectl annotate --overwrite=true ns ingress-nginx meta.helm.sh/release-name=ingress-nginx && \
            kubectl annotate --overwrite=true ns ingress-nginx meta.helm.sh/release-namespace=ingress-nginx && \
            kubectl label ns ingress-nginx app.kubernetes.io/managed-by=Helm
      - events:
          - cleanup
        command: kubectl
        args:
          - -n
          - ingress-nginx
          - wait
          - --for=condition=available
          - deployment
          - ingress-nginx-controller

  - name: oauth2-proxy
    namespace: oauth2-proxy
    chart: ./helm/oauth2-proxy
    createNamespace: true
    disableValidationOnInstall: true
    values:
      - helmfile/oauth2-proxy.gotmpl
    needs:
      - ingress-nginx/ingress-nginx
    hooks:
      - events:
          - prepare
        command: bash
        args:
          - -c
          - 'rm helm/oauth2-proxy/Chart.lock || :'

  - name: smb-csi
    namespace: kube-system
    chart: ./helm/smb-csi
    values:
      - helmfile/smb-csi.gotmpl
    hooks:
      # https://github.com/helm/helm/issues/8036
      - events:
          - prepare
        command: bash
        args:
          - -c
          - 'rm helm/smb-csi/Chart.lock || :'
      - events:
          - presync
        command: bash
        args:
          - -c
          - "kubectl delete StorageClass smb || echo 'no smb StorageClass found'"

  - name: longhorn
    namespace: longhorn-system
    createNamespace: true
    disableValidationOnInstall: true
    chart: ./helm/longhorn
    needs:
      - ingress-nginx/ingress-nginx
    values:
      - helmfile/longhorn-values.gotmpl
    hooks:
      - events:
          - cleanup
        command: bash
        args:
          - -c
          - ./scripts/complete-longhorn.sh

  - name: argocd
    namespace: argocd
    chart: ./helm/argocd
    values:
      - helmfile/argocd.gotmpl
    hooks:
      - events:
          - prepare
        command: bash
        args:
          - -c
          - ./scripts/prepare-argocd.sh
